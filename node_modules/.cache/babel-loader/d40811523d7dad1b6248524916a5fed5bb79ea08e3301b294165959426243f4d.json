{"ast":null,"code":"export var url='https://auth.nomoreparties.co';var checkResponse=function checkResponse(res){if(res.ok){return res.json();}console.log(res);};export var register=function register(password,email){return fetch(\"\".concat(url,\"/signup\"),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(checkResponse);};export var authorize=function authorize(password,email){return fetch(\"\".concat(url,\"/signin\"),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(checkResponse);};export var getToken=function getToken(token){return fetch(\"\".concat(url,\"/users/me\"),{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}}).then(checkResponse).then(function(data){return data;});};","map":{"version":3,"names":["url","checkResponse","res","ok","json","console","log","register","password","email","fetch","concat","method","headers","Accept","body","JSON","stringify","then","authorize","getToken","token","Authorization","data"],"sources":["/Users/sharkavli/проекты яндекс /react-mesto-auth/src/auth.js"],"sourcesContent":["export const url = 'https://auth.nomoreparties.co';\n\nconst checkResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  console.log(res);\n};\n\nexport const register = (password, email) => {\n  return fetch(`${url}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  }).then(checkResponse);\n};\n\nexport const authorize = (password, email) => {\n  return fetch(`${url}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  }).then(checkResponse);\n};\n\nexport const getToken = (token) => {\n  return fetch(`${url}/users/me`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then(checkResponse)\n    .then((data) => data);\n};\n"],"mappings":"AAAA,MAAO,IAAM,CAAAA,GAAG,CAAG,+BAA+B,CAElD,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,GAAG,CAAK,CAC7B,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,CAAC,CAAC,CACnB,CACAC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC,CAClB,CAAC,CAED,MAAO,IAAM,CAAAK,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,QAAQ,CAAEC,KAAK,CAAK,CAC3C,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAIX,GAAG,YAAW,CAC5BY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBT,QAAQ,CAAEA,QAAQ,CAClBC,KAAK,CAAEA,KACT,CAAC,CACH,CAAC,CAAC,CAACS,IAAI,CAACjB,aAAa,CAAC,CACxB,CAAC,CAED,MAAO,IAAM,CAAAkB,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIX,QAAQ,CAAEC,KAAK,CAAK,CAC5C,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAIX,GAAG,YAAW,CAC5BY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBT,QAAQ,CAAEA,QAAQ,CAClBC,KAAK,CAAEA,KACT,CAAC,CACH,CAAC,CAAC,CAACS,IAAI,CAACjB,aAAa,CAAC,CACxB,CAAC,CAED,MAAO,IAAM,CAAAmB,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,KAAK,CAAK,CACjC,MAAO,CAAAX,KAAK,IAAAC,MAAA,CAAIX,GAAG,cAAa,CAC9BY,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAAkB,CAClCQ,aAAa,WAAAX,MAAA,CAAYU,KAAK,CAChC,CACF,CAAC,CAAC,CACCH,IAAI,CAACjB,aAAa,CAAC,CACnBiB,IAAI,CAAC,SAACK,IAAI,QAAK,CAAAA,IAAI,GAAC,CACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}