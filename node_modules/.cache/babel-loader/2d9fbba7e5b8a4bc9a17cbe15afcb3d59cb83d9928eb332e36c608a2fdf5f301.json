{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getProfileInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  getCardsInfo() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  setProfileEdit(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkResponse);\n  }\n  setNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  toggleLike(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  setNewAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.link\n      })\n    }).then(this._checkResponse);\n  }\n}\nexport const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-68',\n  headers: {\n    authorization: '72fd51b5-c68d-42a2-ab30-c6fba5415244',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","config","_url","url","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getProfileInfo","fetch","then","getCardsInfo","setProfileEdit","data","method","body","JSON","stringify","name","about","setNewCard","link","deleteCard","cardId","toggleLike","isLiked","setNewAvatar","avatar","api","authorization"],"sources":["/Users/sharkavli/проекты яндекс /mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getProfileInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  getCardsInfo() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  setProfileEdit(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  setNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  toggleLike(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  setNewAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.link,\n      }),\n    }).then(this._checkResponse);\n  }\n}\n\nexport const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-68',\n  headers: {\n    authorization: '72fd51b5-c68d-42a2-ab30-c6fba5415244',\n    'Content-Type': 'application/json',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}