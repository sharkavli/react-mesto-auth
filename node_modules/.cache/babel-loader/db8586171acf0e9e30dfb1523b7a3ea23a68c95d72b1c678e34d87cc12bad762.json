{"ast":null,"code":"export const url = 'https://auth.nomoreparties.co';\nconst checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  console.log(res);\n};\nexport const register = (password, email) => {\n  return fetch(`${url}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(checkResponse);\n};\nexport const authorize = (identifier, password) => {\n  return fetch(`${url}/auth/local`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      identifier,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.user) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["url","checkResponse","res","ok","json","console","log","register","password","email","fetch","method","headers","Accept","body","JSON","stringify","then","authorize","identifier","response","data","user","localStorage","setItem","jwt","catch","err"],"sources":["/Users/sharkavli/проекты яндекс /react-mesto-auth/src/auth.js"],"sourcesContent":["export const url = 'https://auth.nomoreparties.co';\n\nconst checkResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  console.log(res);\n};\n\nexport const register = (password, email) => {\n  return fetch(`${url}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  }).then(checkResponse);\n};\n\nexport const authorize = (identifier, password) => {\n  return fetch(`${url}/auth/local`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ identifier, password }),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.user) {\n        localStorage.setItem('jwt', data.jwt);\n        return data;\n      }\n    })\n    .catch((err) => console.log(err));\n};\n"],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAG,+BAA+B;AAElD,MAAMC,aAAa,GAAIC,GAAG,IAAK;EAC7B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACAC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;AAClB,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEV,GAAI,SAAQ,EAAE;IAC5BW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBR,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACT,CAAC;EACH,CAAC,CAAC,CAACQ,IAAI,CAAChB,aAAa,CAAC;AACxB,CAAC;AAED,OAAO,MAAMiB,SAAS,GAAGA,CAACC,UAAU,EAAEX,QAAQ,KAAK;EACjD,OAAOE,KAAK,CAAE,GAAEV,GAAI,aAAY,EAAE;IAChCW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEG,UAAU;MAAEX;IAAS,CAAC;EAC/C,CAAC,CAAC,CACCS,IAAI,CAAEG,QAAQ,IAAKA,QAAQ,CAAChB,IAAI,CAAC,CAAC,CAAC,CACnCa,IAAI,CAAEI,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,IAAI,EAAE;MACbC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC;MACrC,OAAOJ,IAAI;IACb;EACF,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAKtB,OAAO,CAACC,GAAG,CAACqB,GAAG,CAAC,CAAC;AACrC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}