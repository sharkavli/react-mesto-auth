{"ast":null,"code":"export const url = 'https://auth.nomoreparties.co';\nconst checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  console.log(res);\n};\nexport const register = (password, email) => {\n  return fetch(`${url}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(checkResponse);\n};\nexport const authorize = (password, email) => {\n  return fetch(`${url}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(checkResponse);\n};\nexport const getToken = token => {\n  return fetch(`${url}/users/me`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(checkResponse).then(data => data);\n};","map":{"version":3,"names":["url","checkResponse","res","ok","json","console","log","register","password","email","fetch","method","headers","Accept","body","JSON","stringify","then","authorize","getToken","token","Authorization","data"],"sources":["/Users/sharkavli/проекты яндекс /react-mesto-auth/src/auth.js"],"sourcesContent":["export const url = 'https://auth.nomoreparties.co';\n\nconst checkResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  console.log(res);\n};\n\nexport const register = (password, email) => {\n  return fetch(`${url}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  }).then(checkResponse);\n};\n\nexport const authorize = (password, email) => {\n  return fetch(`${url}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  }).then(checkResponse);\n};\n\nexport const getToken = (token) => {\n  return fetch(`${url}/users/me`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then(checkResponse)\n    .then((data) => data);\n};\n"],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAG,+BAA+B;AAElD,MAAMC,aAAa,GAAIC,GAAG,IAAK;EAC7B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACAC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;AAClB,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEV,GAAI,SAAQ,EAAE;IAC5BW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBR,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACT,CAAC;EACH,CAAC,CAAC,CAACQ,IAAI,CAAChB,aAAa,CAAC;AACxB,CAAC;AAED,OAAO,MAAMiB,SAAS,GAAGA,CAACV,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEV,GAAI,SAAQ,EAAE;IAC5BW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBR,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACT,CAAC;EACH,CAAC,CAAC,CAACQ,IAAI,CAAChB,aAAa,CAAC;AACxB,CAAC;AAED,OAAO,MAAMkB,QAAQ,GAAIC,KAAK,IAAK;EACjC,OAAOV,KAAK,CAAE,GAAEV,GAAI,WAAU,EAAE;IAC9BW,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CACCH,IAAI,CAAChB,aAAa,CAAC,CACnBgB,IAAI,CAAEK,IAAI,IAAKA,IAAI,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}